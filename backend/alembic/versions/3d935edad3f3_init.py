"""init

Revision ID: 3d935edad3f3
Revises: 
Create Date: 2025-10-23 19:55:33.207453

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import vector

# revision identifiers, used by Alembic.
revision: str = '3d935edad3f3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS vector;")
    op.create_table('users',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('oauth_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.TEXT(), nullable=True),
    sa.Column('access_token', sa.TEXT(), nullable=True),
    sa.Column('scope', sa.String(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_oauth_tokens_user_id'), 'oauth_tokens', ['user_id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('drive_folder_id', sa.String(), nullable=True),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), server_default='waiting', nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_drive_folder_id'), 'projects', ['drive_folder_id'], unique=False)
    op.create_index(op.f('ix_projects_user_id'), 'projects', ['user_id'], unique=False)
    op.create_table('images',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('project_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('drive_file_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('mime_type', sa.String(), nullable=True),
    sa.Column('size_bytes', sa.Integer(), nullable=True),
    sa.Column('download_url', sa.String(), nullable=True),
    sa.Column('thumbnail_link', sa.String(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id', 'drive_file_id', name='uq_project_drivefile')
    )
    op.create_index(op.f('ix_images_drive_file_id'), 'images', ['drive_file_id'], unique=False)
    op.create_index(op.f('ix_images_processed'), 'images', ['processed'], unique=False)
    op.create_index(op.f('ix_images_project_id'), 'images', ['project_id'], unique=False)
    op.create_table('faces',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('image_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('embedding', vector.VECTOR(dim=512), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_faces_image_id'), 'faces', ['image_id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('project_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('image_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('status', sa.Enum('queued', 'processing', 'done', 'failed', name='task_status'), server_default='queued', nullable=False),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('result', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_image_id'), 'tasks', ['image_id'], unique=False)
    op.create_index(op.f('ix_tasks_project_id'), 'tasks', ['project_id'], unique=False)
    op.create_index(op.f('ix_tasks_user_id'), 'tasks', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tasks_user_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_project_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_image_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_faces_image_id'), table_name='faces')
    op.drop_table('faces')
    op.drop_index(op.f('ix_images_project_id'), table_name='images')
    op.drop_index(op.f('ix_images_processed'), table_name='images')
    op.drop_index(op.f('ix_images_drive_file_id'), table_name='images')
    op.drop_table('images')
    op.drop_index(op.f('ix_projects_user_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_drive_folder_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_oauth_tokens_user_id'), table_name='oauth_tokens')
    op.drop_table('oauth_tokens')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
